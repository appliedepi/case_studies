{"title":"Welcome to our Open Case Study Repository!","markdown":{"yaml":{"output":"html_document","editor_options":{"chunk_output_type":"console"}},"headingText":"Welcome to our Open Case Study Repository!","containsRefs":false,"markdown":"\n\n```{r, echo=F}\npacman::p_load(\n  rio,\n  here,\n  janitor,\n  tidyverse,\n  googlesheets4,\n  reactable\n)\n```\n\n\n::: {.callout-important title=\"WEBSITE UNDER CONSTRUCTION\"}\nThis is a draft version of this page. The content and URL will change.\n:::\n\n\nHere, you can practice technical and analytical skills with real-life scenarios. The case studies, shared by FETPs and health ministries, use training data that’s either generated or anonymized.\n\nA case study is a fun, interactive way to learn—guiding you through scenarios with tasks and questions. You’ll find a variety of topics, skill levels, and diseases below, most of which take just a few hours to complete. Simply pick the one that fits you best and click to open it in your language!\n\nFor more information on how to use the case studies, click the [How-to\nGuide](pages/instructions.html). \n\n```{r, echo = F, eval=T, message= F}\n\n# define current language of interest \n# (this allows us to just copy paste this code chunk to other langs and switch, \n# ideally there would be a way to auto switch using inputs from babelquarto?)\ncurr_lang <- \"en\"\n\n# Specify the URL of the Google Sheet (which lists case studies)\nsheet_url <- \"https://docs.google.com/spreadsheets/d/1wrZtM3XjUtbDXD7PVLOHdd-H92hq_-WAQoIpRatjhlc/edit?gid=598142358\"\n\n\n# Read the data from the Google Sheet\ntable_raw <- read_sheet(sheet_url, sheet = \"Publishing\")\n\n# Read in the column names translation sheet from Google sheet\ntranslations <- read_sheet(sheet_url, sheet = \"TranslationCols\")\n\n\n# filter to show current language \n# still have links to other languages by combining\ntable <- table_raw %>%\n  mutate(casestudy_identifier= if_else(publish==\"yes\",casestudy_identifier, \"under_construction\")) %>% \n  mutate(\n    og_language = language, \n    language = paste0(\n      '<a href=\"pages/', \n      casestudy_identifier, \n      if_else(language != \"en\", paste0(\".\", language), \"\"),\n      '.html\" target=\"_blank\">', \n      language, \n      '</a>'\n    )\n  )\n\n# Find available languages using group_identifier to combine languages\nfind_langs <- table %>% \n  group_by(group_identifier) %>% \n  summarize(language = paste(unique(language), collapse = \", \"), \n                   .groups = 'drop')  \n\n\n# Join with the original data to retain 'name' and handle suffixes\noutput <- table %>% \n  #filter(og_language == curr_lang) %>% \n  # Restrict columns  \n  select(group_identifier, name, creator, tool, country, scale, subject,\n                `technical complexity`, `methodological complexity`) %>% \n  unique() %>% \n  left_join(find_langs, by = \"group_identifier\") %>% \n  # rearrange to have language further forward (not sure why this is not agreeing)\n select(name, creator, language, tool, subject, `technical complexity`, `methodological complexity`)\n  \n\n# Create table\nreactable(output,\n  columns = list(\n    name = colDef(name = matchmaker::match_vec(\"name\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang), \n                  style = list(width = \"300px\",\n                               fontWeight = \"bold\"),\n                  headerStyle = list(width = \"300px\")),\n    creator = colDef(name = matchmaker::match_vec(\"creator\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang)), \n    language = colDef(name = matchmaker::match_vec(\"language\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang), \n                      html = TRUE,\n                      align = \"left\"),\n    tool = colDef(name = matchmaker::match_vec(\"tool\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang)), \n    # country = colDef(name = matchmaker::match_vec(\"country\", \n    #                                            dictionary = translations, \n    #                                            from = \"og\", to = curr_lang), \n    # scale = colDef(name = matchmaker::match_vec(\"scale\", \n    #                                            dictionary = translations, \n    #                                            from = \"og\", to = curr_lang), \n    subject = colDef(name = matchmaker::match_vec(\"subject\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang)),\n    `technical complexity` = colDef(name = matchmaker::match_vec(\"technical complexity\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang),\n                                    align = \"center\",\n                                    style = list(width = \"150px\"),\n                                    headerStyle = list(width = \"150px\")),\n    `methodological complexity` = colDef(name = matchmaker::match_vec(\"methodological complexity\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang), \n                                         align = \"center\",\n                                         style = list(width = \"150px\"),\n                                         headerStyle = list(width = \"150px\"))\n  ),\n  defaultPageSize = 5,\n  filterable = TRUE,\n  sortable = TRUE,\n  style = list(backgroundColor = \"white\", \n               color = \"black\", \n               fontFamily = \"Arial\",  \n                fontSize = \"17px\",\n               border = \"1px solid #000\"), # Blue background with white text),\n  rowStyle = list(backgroundColor = \"white\", \n               color = \"black\", \n               fontFamily = \"Arial\",  \n                fontSize = \"14px\"), # Blue background with white text),\n)\n```\n\n\n## About us\n\n[**Applied Epi**](https://www.appliedepi.org/) is a nonprofit organisation and grassroots movement of frontline epis from around the world. We write in our spare time to offer this resource to the community. Your encouragement and feedback is most welcome:\n\n-   Visit our [**website**](https://www.appliedepi.org/) and [**join our contact list**](https://docs.google.com/forms/d/e/1FAIpQLSdtk7Mg32lYQ3ucbIM-kIwIRxgRwDfG5TJHsVAbFjQ1i6fwiw/viewform?usp=send_form)\n\n-   **contact\\@appliedepi.org**, tweet [**\\@appliedepi**](https://x.com/appliedepi), or [**LinkedIn**](https://www.linkedin.com/company/appliedepi/?originalSubdomain=it)\n\n-   Submit issues to our **Github repository**","srcMarkdownNoYaml":"\n\n```{r, echo=F}\npacman::p_load(\n  rio,\n  here,\n  janitor,\n  tidyverse,\n  googlesheets4,\n  reactable\n)\n```\n\n## Welcome to our Open Case Study Repository!\n\n::: {.callout-important title=\"WEBSITE UNDER CONSTRUCTION\"}\nThis is a draft version of this page. The content and URL will change.\n:::\n\n\nHere, you can practice technical and analytical skills with real-life scenarios. The case studies, shared by FETPs and health ministries, use training data that’s either generated or anonymized.\n\nA case study is a fun, interactive way to learn—guiding you through scenarios with tasks and questions. You’ll find a variety of topics, skill levels, and diseases below, most of which take just a few hours to complete. Simply pick the one that fits you best and click to open it in your language!\n\nFor more information on how to use the case studies, click the [How-to\nGuide](pages/instructions.html). \n\n```{r, echo = F, eval=T, message= F}\n\n# define current language of interest \n# (this allows us to just copy paste this code chunk to other langs and switch, \n# ideally there would be a way to auto switch using inputs from babelquarto?)\ncurr_lang <- \"en\"\n\n# Specify the URL of the Google Sheet (which lists case studies)\nsheet_url <- \"https://docs.google.com/spreadsheets/d/1wrZtM3XjUtbDXD7PVLOHdd-H92hq_-WAQoIpRatjhlc/edit?gid=598142358\"\n\n\n# Read the data from the Google Sheet\ntable_raw <- read_sheet(sheet_url, sheet = \"Publishing\")\n\n# Read in the column names translation sheet from Google sheet\ntranslations <- read_sheet(sheet_url, sheet = \"TranslationCols\")\n\n\n# filter to show current language \n# still have links to other languages by combining\ntable <- table_raw %>%\n  mutate(casestudy_identifier= if_else(publish==\"yes\",casestudy_identifier, \"under_construction\")) %>% \n  mutate(\n    og_language = language, \n    language = paste0(\n      '<a href=\"pages/', \n      casestudy_identifier, \n      if_else(language != \"en\", paste0(\".\", language), \"\"),\n      '.html\" target=\"_blank\">', \n      language, \n      '</a>'\n    )\n  )\n\n# Find available languages using group_identifier to combine languages\nfind_langs <- table %>% \n  group_by(group_identifier) %>% \n  summarize(language = paste(unique(language), collapse = \", \"), \n                   .groups = 'drop')  \n\n\n# Join with the original data to retain 'name' and handle suffixes\noutput <- table %>% \n  #filter(og_language == curr_lang) %>% \n  # Restrict columns  \n  select(group_identifier, name, creator, tool, country, scale, subject,\n                `technical complexity`, `methodological complexity`) %>% \n  unique() %>% \n  left_join(find_langs, by = \"group_identifier\") %>% \n  # rearrange to have language further forward (not sure why this is not agreeing)\n select(name, creator, language, tool, subject, `technical complexity`, `methodological complexity`)\n  \n\n# Create table\nreactable(output,\n  columns = list(\n    name = colDef(name = matchmaker::match_vec(\"name\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang), \n                  style = list(width = \"300px\",\n                               fontWeight = \"bold\"),\n                  headerStyle = list(width = \"300px\")),\n    creator = colDef(name = matchmaker::match_vec(\"creator\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang)), \n    language = colDef(name = matchmaker::match_vec(\"language\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang), \n                      html = TRUE,\n                      align = \"left\"),\n    tool = colDef(name = matchmaker::match_vec(\"tool\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang)), \n    # country = colDef(name = matchmaker::match_vec(\"country\", \n    #                                            dictionary = translations, \n    #                                            from = \"og\", to = curr_lang), \n    # scale = colDef(name = matchmaker::match_vec(\"scale\", \n    #                                            dictionary = translations, \n    #                                            from = \"og\", to = curr_lang), \n    subject = colDef(name = matchmaker::match_vec(\"subject\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang)),\n    `technical complexity` = colDef(name = matchmaker::match_vec(\"technical complexity\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang),\n                                    align = \"center\",\n                                    style = list(width = \"150px\"),\n                                    headerStyle = list(width = \"150px\")),\n    `methodological complexity` = colDef(name = matchmaker::match_vec(\"methodological complexity\", \n                                               dictionary = translations, \n                                               from = \"og\", to = curr_lang), \n                                         align = \"center\",\n                                         style = list(width = \"150px\"),\n                                         headerStyle = list(width = \"150px\"))\n  ),\n  defaultPageSize = 5,\n  filterable = TRUE,\n  sortable = TRUE,\n  style = list(backgroundColor = \"white\", \n               color = \"black\", \n               fontFamily = \"Arial\",  \n                fontSize = \"17px\",\n               border = \"1px solid #000\"), # Blue background with white text),\n  rowStyle = list(backgroundColor = \"white\", \n               color = \"black\", \n               fontFamily = \"Arial\",  \n                fontSize = \"14px\"), # Blue background with white text),\n)\n```\n\n\n## About us\n\n[**Applied Epi**](https://www.appliedepi.org/) is a nonprofit organisation and grassroots movement of frontline epis from around the world. We write in our spare time to offer this resource to the community. Your encouragement and feedback is most welcome:\n\n-   Visit our [**website**](https://www.appliedepi.org/) and [**join our contact list**](https://docs.google.com/forms/d/e/1FAIpQLSdtk7Mg32lYQ3ucbIM-kIwIRxgRwDfG5TJHsVAbFjQ1i6fwiw/viewform?usp=send_form)\n\n-   **contact\\@appliedepi.org**, tweet [**\\@appliedepi**](https://x.com/appliedepi), or [**LinkedIn**](https://www.linkedin.com/company/appliedepi/?originalSubdomain=it)\n\n-   Submit issues to our **Github repository**"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":"html_document","warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"number-sections":false,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","babelquarto":{"languagecodes":[{"name":"es","text":"Español"},{"name":"en","text":"English"}],"mainlanguage":"en","languages":["es"],"languagelinks":"sidebar"},"title-es":"Estudios de casos de AppliedEpi","theme":{"light":"sandstone","dark":["darkly","theme-dark.scss"]},"toc-location":"left","number-depth":0,"grid":{"body-width":"1000px","margin-width":"50px"},"editor_options":{"chunk_output_type":"console"}},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}