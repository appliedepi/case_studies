{
  "hash": "4c52766f318112bd164517033a30181a",
  "result": {
    "markdown": "---\noutput: html_document\neditor_options: \n  chunk_output_type: console\nexecute:\n  warning: false\n  error: false\nformat: \n  html: \n    css: webex.css\n    include-after-body: webex.js\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n# Descriptive analysis of the 2022 Mpox outbreak in Europe {#sec-rpractical}\n\n::: {.callout-note appearance=\"minimal\" icon=\"false\"}\n**Tool**: R    \\| **Technical complexity**: Basic    \\| **Methodological complexity**: Basic\\\n**Source:** ECDC EI Group (simulated data)\\\n**Prior knowledge required:** [R basics](https://epirhandbook.com/en/new_pages/basics.html) (Using\nRstudio; R packages, functions and arguments)\n:::\n\nFor instructions on how to use our case studies, [see here.] We welcome feedback and suggestions via [contact\\@appliedepi.org](mailto:contact@appliedepi.org). Discuss the case study at [community].\n\n\\pagebreak\n\n## Scenario\n\nIt is May 2022 and Mpox has just been reported for the first time across 5 countries in Europe. You have been requested to provide a basic descriptive analysis to the European Centre for Disease Prevention and Control (ECDC).\n\nYou are given access to:\n\n-   Linelists with cases collated by the five countries\n-   Datasets with aggregate cases from open sources\n\nLet's go!\n\n## Objectives\n\nIn this case study you will: \n\n1.  Explore different types of files and how they can be imported in R.\n2.  Perform basic data cleaning, e.g., changing the variable type, recode variables, aggregate and filter.\n3.  Perform a basic descriptive analysis using tables and graphs\n\n## Step 1. Set up\n\n### 1.1 Get started in R Studio\n\nStart by setting up a reproducible and well-organized workflow. This will make it easy to rerun your analysis whenever needed.\n\n**Tasks:**\n\n-   Set up a R Studio project\n-   Set up clear sub-folders where your code, data, and outputs will go\n-   Create an R script, or an Rmarkdown file if you prefer. Make sure the script purpose, date, and author are written as comments at the top.\n-   Extra: Ensure your working language in RStudio is appropriate (e.g. English for this exercise)\n\n<details>\n\n<summary style=\"text-decoration: underline; color: darkgreen;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:gold;overflow:visible;position:relative;\"><path d=\"M297.2 248.9C311.6 228.3 320 203.2 320 176c0-70.7-57.3-128-128-128S64 105.3 64 176c0 27.2 8.4 52.3 22.8 72.9c3.7 5.3 8.1 11.3 12.8 17.7l0 0c12.9 17.7 28.3 38.9 39.8 59.8c10.4 19 15.7 38.8 18.3 57.5H109c-2.2-12-5.9-23.7-11.8-34.5c-9.9-18-22.2-34.9-34.5-51.8l0 0 0 0c-5.2-7.1-10.4-14.2-15.4-21.4C27.6 247.9 16 213.3 16 176C16 78.8 94.8 0 192 0s176 78.8 176 176c0 37.3-11.6 71.9-31.4 100.3c-5 7.2-10.2 14.3-15.4 21.4l0 0 0 0c-12.3 16.8-24.6 33.7-34.5 51.8c-5.9 10.8-9.6 22.5-11.8 34.5H226.4c2.6-18.7 7.9-38.6 18.3-57.5c11.5-20.9 26.9-42.1 39.8-59.8l0 0 0 0 0 0c4.7-6.4 9-12.4 12.7-17.7zM192 128c-26.5 0-48 21.5-48 48c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-44.2 35.8-80 80-80c8.8 0 16 7.2 16 16s-7.2 16-16 16zm0 384c-44.2 0-80-35.8-80-80V416H272v16c0 44.2-35.8 80-80 80z\"/></svg>`{=html} Click to read a hint\n\n</summary>\n\n</br>\n\n- Create a folder where all the work in this case study will go. For example, create 'mpox_analysis' on your computer desktop. Create your R Studio project to be based in this folder. \n\n- We suggest creating the following sub-folders: scripts (for your code), data (for your data), and outputs (for your analytical outputs). \n\n</details>\n\n<details>\n\n<summary style=\"text-decoration: underline; color: red;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>`{=html}Click to see a solution (try\nit yourself first!)\n\n</summary>\n\n</br>\n\nTo create an Rstudio project in your new folder, clicking *New Project...* in the top left of your R Studio, then *\"Existing Directory\"* (because your folder area already exists), then *Browse* to select your new folder. For more information, look at the [R projects] section of the Epi R Handbook (https://epirhandbook.com/new_pages/r_projects.html)\n\nStart a new R script by clicking *New File...* in the top left of your R Studio, then *\"R Script\"*. Save it immediately in the appropriate place, e.g. in a 'scripts' subfolder of your R Project. \n\nAt the top of your new R scipt, write some essential information like your name, the purpose of the file, and the date. \n\nYour R locale determines the language and regional settings used for things like date formats and translations. If your locale is different from the language you want for your report (e.g., a French locale vs. an English report), you can change it to English by running Sys.setlocale(\"LC_ALL\", \"English\"). Include this in your script if needed, or skip it if your locale is usually appropriate. More information on this is available in the [instructions] page. \n\n</details>\n\n### 1.2 Install/load packages\n\nNext in your R script, you need to install and load the necessary R packages. This ensures that the functions you need are available for your analysis.\n\nYou will need the following packages: rio (for importing data), janitor (for cleaning data), lubridate (for cleaning dates), skimr (for reviewing data), epikit (for epi-related tasks), gtsummary (for presentation-ready tables), apyramid (for age-sex pyramids), and tidyverse (for general data manipulation/science tasks).\n\nAs you start, your trusted colleague nudges you and whispers \"I've heard that a great way to manage your packages is with the {pacman} package\". \n\nOver to you!\n\n<details>\n\n<summary style=\"text-decoration: underline; color: red;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>`{=html}Click to see a solution (try\nit yourself first!)\n\n</summary>\n\n</br>\n\nUse the function p_load() from {pacman} for this task. You provide the function with a list of packages that you want to use. It will take two steps per package: 1) Check if the package is installed on your computer, and install it if necessary, then 2) Load the package so it can be used during this R session. \n\nIf you don't already have pacman installed, you will need to install it the \"traditional way\" first, with install.packages(). \n\nNote that the order of packages in your p_load function can be important. If two packages have the same function names (e.g. select() in tidyverse and select() in MASS, which do different things), then R will use the function from the most recently loaded package. To prioritize functions from tidyverse, which are commonly used for data manipulation and visualization, load tidyverse last.\n\n</detail>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Ensures the package \"pacman\" is installed\nif (!require(\"pacman\")) {\n     install.packages(\"pacman\") }\n\n# install (if necessary) from CRAN and load packages to be used\npacman::p_load(\n  rio,        # importing data  \n  skimr,      # get overview of data\n  janitor,    # data cleaning and tables\n  lubridate,  # working with dates\n  epikit,     # to create age categories\n  gtsummary,  # summary statistics, tests and regressions \n  apyramid,   # plotting age pyramids \n  tidyverse  # data management and visualization\n)\n```\n:::\n\n\n## Step 2: Download and import the data\n\n### 2.1: Download the data\n\nECDC provides you with two files for your analysis:\n\n- A case-level linelist (*\"mpox_linelist.xlsx\"*) with case information from five countries (countries A - E)\n- An aggregate table (*\"mpox_aggregate_table.csv\"*) for those countries with cumulative case counts per day. \n\nThey provide it to you via AppliedEpi's very useful data repository, which you can access using the *{appliedepidata}* package. So first you need to download these two files to your own computer, as follows:\n\n1) Install the *{appliedepidata}* package from GitHub using the install_github functions in the remotes package. Install *{remotes}* if you need to first. \n\n::: {.cell}\n\n```{.r .cell-code}\n# Install remotes if you need to (so you can install a package from GitHub)\npacman::p_load(\"remotes\")\n\n# Use the install_github function from remotes to install appliedepidata\nremotes::install_github(\"appliedepi/appliedepidata\")\n```\n:::\n\n\n2) Save the two datasets into a specific folder using the *save_data()* function from *{appliedepidata}*, by running the  code below. The example below saves the data into a 'data' subfolder within the R project. Note that if you do not specify a location within the 'path' argument of the function, a window will pop up asking you to manually select a folder. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save down the two mpox files using the save_data() function from appliedepidata\nappliedepidata::save_data(\"mpox_linelist\",\n                        path = \"data\")\n\nappliedepidata::save_data(\"mpox_aggregate_table\",\n                          path = \"data\")\n```\n:::\n\n\n### 2.2 Import the data \n\nGreat! Thanks ECDC and Applied Epi! Now it's time to import the data into R Studio so you can analyse it. \n\n**Task:** Import the downloaded case-based and aggregated data into your R environment. Ideally you want to use one function for both datasets, despite one being a csv and the other an xlsx file. \n\n<details>\n\n<summary style=\"text-decoration: underline; color: darkgreen;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:gold;overflow:visible;position:relative;\"><path d=\"M297.2 248.9C311.6 228.3 320 203.2 320 176c0-70.7-57.3-128-128-128S64 105.3 64 176c0 27.2 8.4 52.3 22.8 72.9c3.7 5.3 8.1 11.3 12.8 17.7l0 0c12.9 17.7 28.3 38.9 39.8 59.8c10.4 19 15.7 38.8 18.3 57.5H109c-2.2-12-5.9-23.7-11.8-34.5c-9.9-18-22.2-34.9-34.5-51.8l0 0 0 0c-5.2-7.1-10.4-14.2-15.4-21.4C27.6 247.9 16 213.3 16 176C16 78.8 94.8 0 192 0s176 78.8 176 176c0 37.3-11.6 71.9-31.4 100.3c-5 7.2-10.2 14.3-15.4 21.4l0 0 0 0c-12.3 16.8-24.6 33.7-34.5 51.8c-5.9 10.8-9.6 22.5-11.8 34.5H226.4c2.6-18.7 7.9-38.6 18.3-57.5c11.5-20.9 26.9-42.1 39.8-59.8l0 0 0 0 0 0c4.7-6.4 9-12.4 12.7-17.7zM192 128c-26.5 0-48 21.5-48 48c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-44.2 35.8-80 80-80c8.8 0 16 7.2 16 16s-7.2 16-16 16zm0 384c-44.2 0-80-35.8-80-80V416H272v16c0 44.2-35.8 80-80 80z\"/></svg>`{=html} Click to read a hint\n\n</summary>\n\n</br>\n\nUse the import function from the {rio} package, which can recognise and import different file types. It replaces importing functions that are specific to the file type, such as read.csv() from {base} for .csv files and read_excel() from {readxl} to import .xlsx files.\n\nIf you feel you need to know more about importing functions, read the Import and export chapter of the EpiRhandbook.\n\n</details>\n\n<details>\n\n<summary style=\"text-decoration: underline; color: red;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>`{=html}Click to see a solution (try\nit yourself first!)\n\n</summary>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Import data  --------------\n\n# Case-based data\nmpox_linelist_raw <- import(\"data/mpox_linelist.xlsx\")\n\n# Aggregated data\nmpox_agg_raw <- import(\"data/mpox_aggregate_table.csv\")\n```\n:::\n\n\n\n\n</details>\n\n## Step 3: Explore the data\n\nYou need to understand what the data looks like as a first step, to inform your analysis. \n\n*Tasks:* Take a look at the different data frames and determine:\n\n-   The number of columns and observations (e.g. their _dimensions_)\n-   The class of their columns and whether it matches its nature (e.g., are \"dates\" considered \"dates\" by R?)\n-   If the contents of columns are clean and standardized in the mpox linelist (e.g. gender, clinical symptoms, outcome, hiv status and sexual orientation). Do you need to recode any of them?\n-   How unknown or missing data is  categorised in these columns. Do these values need to be standardized?\n\n<details>\n\n<summary style=\"text-decoration: underline; color: darkgreen;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:gold;overflow:visible;position:relative;\"><path d=\"M297.2 248.9C311.6 228.3 320 203.2 320 176c0-70.7-57.3-128-128-128S64 105.3 64 176c0 27.2 8.4 52.3 22.8 72.9c3.7 5.3 8.1 11.3 12.8 17.7l0 0c12.9 17.7 28.3 38.9 39.8 59.8c10.4 19 15.7 38.8 18.3 57.5H109c-2.2-12-5.9-23.7-11.8-34.5c-9.9-18-22.2-34.9-34.5-51.8l0 0 0 0c-5.2-7.1-10.4-14.2-15.4-21.4C27.6 247.9 16 213.3 16 176C16 78.8 94.8 0 192 0s176 78.8 176 176c0 37.3-11.6 71.9-31.4 100.3c-5 7.2-10.2 14.3-15.4 21.4l0 0 0 0c-12.3 16.8-24.6 33.7-34.5 51.8c-5.9 10.8-9.6 22.5-11.8 34.5H226.4c2.6-18.7 7.9-38.6 18.3-57.5c11.5-20.9 26.9-42.1 39.8-59.8l0 0 0 0 0 0c4.7-6.4 9-12.4 12.7-17.7zM192 128c-26.5 0-48 21.5-48 48c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-44.2 35.8-80 80-80c8.8 0 16 7.2 16 16s-7.2 16-16 16zm0 384c-44.2 0-80-35.8-80-80V416H272v16c0 44.2-35.8 80-80 80z\"/></svg>`{=html} Click to read a hint\n\n</summary>\n\n</br>\n\nAn efficient function for initial data exploring is skim() from the {skimr} package, as it gives you a lot of information on data structure and content. \n\nYou can also use the function tabyl() from {janitor}, to get counts and percentages of every category in the data column, one by one. These get printed to your RStudio console. \n\nFinally, you can use the tbl_summary() function from gtsummary to get see the distribution of values within multiple variables at once. The output from tbl_summary() is seen in the Viewer of your RStudio.\n\nDecide which one you prefer! \n\n</br>\n\n</details>\n\n<details>\n\n<summary style=\"text-decoration: underline; color: red;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>`{=html}Click to see a solution (try\nit yourself first!)\n\n</summary>\n\n</br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Explore the dimensions of the two data objects\nskim(mpox_linelist_raw)\nskim(mpox_agg_raw)\n\n# Explore the values of different categorical columns in the mpox linelist: with tabyl\ntabyl(mpox_linelist_raw, Gender)\n\ntabyl(mpox_linelist_raw, ClinicalSymptoms)\n\ntabyl(mpox_linelist_raw, Outcome)\n\ntabyl(mpox_linelist_raw, HIVStatus)\n\ntabyl(mpox_linelist_raw, SexualOrientation)\n\n# Explore the values of different categorical columns in the mpox linelist: with tbl_summary\nmpox_linelist_raw %>% \n  select(Gender, ClinicalSymptoms, Outcome, HIVStatus, SexualOrientation) %>% \n  tbl_summary()\n```\n:::\n\n\n</br>\n\n</details>\n\n::: {.callout-note appearance=\"minimal\" icon=\"false\"}\n\n**Test yourself!**\n\n::: webex-check\n\nHow many columns does the aggregated data frame have? <div class='webex-radiogroup' id='radio_BLCEYDSDCU'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_BLCEYDSDCU\" value=\"\"></input> <span>2000</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_BLCEYDSDCU\" value=\"\"></input> <span>13</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_BLCEYDSDCU\" value=\"answer\"></input> <span>3</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_BLCEYDSDCU\" value=\"\"></input> <span>101</span></label></div>\n\n:::\n\n::: webex-check\n\nWhat is the class of the column DateOfNotification in the case-based data? <div class='webex-radiogroup' id='radio_FXTIAOAICI'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_FXTIAOAICI\" value=\"\"></input> <span>Date</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_FXTIAOAICI\" value=\"answer\"></input> <span>Character</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_FXTIAOAICI\" value=\"\"></input> <span>Numeric</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_FXTIAOAICI\" value=\"\"></input> <span>Factor</span></label></div>\n\n:::\n\n::: webex-check\n\nFor how many cases is the HIV status Unknown or missing? <div class='webex-radiogroup' id='radio_HFGXNNUNTB'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_HFGXNNUNTB\" value=\"answer\"></input> <span>1168</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_HFGXNNUNTB\" value=\"\"></input> <span>722</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_HFGXNNUNTB\" value=\"\"></input> <span>900</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_HFGXNNUNTB\" value=\"\"></input> <span>446</span></label></div>\n\n:::\n:::\n\n## Step 4: Clean the data\n\n### 4.1: Clean the case-based data\n\nWhen exploring the case-based data, you may have noticed that there are\na few things that we need to take care of before we can start doing further analysis. Firstly, names contain a mixture of upper and lower case letters. Whilst this isn't in itself a problem, R is case-sensitive, so having all names in lower case may make our life easier. Also, date columns are not consider \"Dates\" by R, but instead they are being consider as \"Character\", which means they are being considered as nominal data. This would give us problems when plotting by Dates. Another issue is that some columns have categories that may not be intuitive for all. For example, Gender is categorised with \"F\", \"M\", \"O\" and \"UNK\". The column Outcome as \"A\" and \"UNK\". We should give them more appropriate categories. Finally, it is important that missing data is considered as \"missing\" in R. That means that R treats it as \"NA\". In\nthe column clinical symptoms, for example, missing data is an empty cell, not \"NA\". R is considering this as another nominal category instead of missing, and will consider it this way in any analysis or\noutput you produce.\n\n**Tasks**:\n\n-   Create a clean version of your case-based data making all cleaning changes in a single piping command\n-   Change all column names to lower case.\n-   Convert all date columns to class \"Date\".\n-   Use the column \"DateOfNotification\" to create a column called \"week_date\" which has the week of notification, starting on Mondays.\n-   Transform all empty cells into \"NA\"\n-   Recode \"Gender\" categories into: \"Female\", \"Male\", \"Other\" and \"Unknown\"\n-   Recode \"Outcome\" categories into: \"Alive\" and \"Unknown\"\n-   Recode HIV status into: \"Positive\", \"Negative\" and \"Unknown/Missing\"\n-   Recode Sexual orientation into: \"Bisexual\", \"Heterosexual\", \"MSM/homo or bisexual male\" and \"Unknown/missing\".\n-   Create a column called \"age_group\" with ten year age groups and the oldest group being 70+\n-   Check that all changes have been made correctly\n\n<details>\n\n<summary style=\"text-decoration: underline; color: darkgreen;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:gold;overflow:visible;position:relative;\"><path d=\"M297.2 248.9C311.6 228.3 320 203.2 320 176c0-70.7-57.3-128-128-128S64 105.3 64 176c0 27.2 8.4 52.3 22.8 72.9c3.7 5.3 8.1 11.3 12.8 17.7l0 0c12.9 17.7 28.3 38.9 39.8 59.8c10.4 19 15.7 38.8 18.3 57.5H109c-2.2-12-5.9-23.7-11.8-34.5c-9.9-18-22.2-34.9-34.5-51.8l0 0 0 0c-5.2-7.1-10.4-14.2-15.4-21.4C27.6 247.9 16 213.3 16 176C16 78.8 94.8 0 192 0s176 78.8 176 176c0 37.3-11.6 71.9-31.4 100.3c-5 7.2-10.2 14.3-15.4 21.4l0 0 0 0c-12.3 16.8-24.6 33.7-34.5 51.8c-5.9 10.8-9.6 22.5-11.8 34.5H226.4c2.6-18.7 7.9-38.6 18.3-57.5c11.5-20.9 26.9-42.1 39.8-59.8l0 0 0 0 0 0c4.7-6.4 9-12.4 12.7-17.7zM192 128c-26.5 0-48 21.5-48 48c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-44.2 35.8-80 80-80c8.8 0 16 7.2 16 16s-7.2 16-16 16zm0 384c-44.2 0-80-35.8-80-80V416H272v16c0 44.2-35.8 80-80 80z\"/></svg>`{=html} Click to read a hint\n\n</summary>\n\n</br>\n\nTo convert all names to lower case, rather than renaming each column you may use the function clean_names() from the {janitor} package, which will do it automatically for all columns. Use lubridate functions to\ntransform date columns into \"Date\" class, you can do this one by one, or you could do all at the same time using the across() function from {dplyr}. If you feel you need to know more about transforming dates read\nthe chapter [Working with\nDates](https://epirhandbook.com/en/new_pages/dates.html) from the EpiRhandbook. If you are not sure how to use the across() function, you can also read the section on [Transform multiple columns](https://epirhandbook.com/en/new_pages/cleaning.html#clean_across).\n\nOne simple way to create the \"week_date\" column would be to use the function floor_date() from {lubridate}. Take a look at the documentation to understand how it works and how to make Monday the starting day of the week.\n\nThere are different functions that we can use to recode. We propose three: The function recode() from {dplyr}, the function ifelse() from {base} and the function case_when() from {dplyr}. If you want to know more about these functions, look that the section on [Re-code\nvalues](https://epirhandbook.com/en/new_pages/cleaning.html#re-code-values)\nfrom the EpiRhandbook.\n\nTo create the age groups, explore the function called age_categories()\nfrom the {epikit} package.\n\n</br>\n\n</details>\n\n<details>\n\n<summary style=\"text-decoration: underline; color: red;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>`{=html}Click to see a solution (try\nit yourself first!)\n\n</summary>\n\n</br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a new object called mpox_linelist which is the clean version of the raw data, applying the cleaning functions\n\n\nmpox_linelist <- mpox_linelist_raw %>% \n  \n  clean_names() %>% # standardises names and puts all into lower case \n  \n  #(Note: after this point all column names have changed)\n  \n  mutate(date_of_notification = ymd(date_of_notification)) %>%  #transform ONE column into date\n\n  mutate(across(starts_with(\"date\"), \n                .fns = ~ ymd(.x))) %>%  #transforms ALL columns starting with \"date\" into dates\n  \n  mutate(week_date = floor_date(date_of_notification, # create week column with Monday start\n                              unit = \"week\",\n                              week_start = \"Monday\")) %>% \n  \n  mutate(across(where(is.character), \n                .fns = ~ ifelse(.x == \"\", NA, .x)))  %>% #transforms empty cells into NA across all character columns\n  \n  mutate(gender = recode(gender,\n                         \"F\" = \"Female\",\n                         \"M\" = \"Male\",\n                         \"O\" = \"Other\",\n                         \"UNK\" = \"Unknown\")) %>%\n  \n    \n  mutate(across(where(is.character), \n                .fns = ~ ifelse(.x == \"UNK\", \"Unknown\", .x)))  %>% #transforms UNK to Unknown across all character columns\n  \n  mutate(outcome = ifelse(outcome == \"A\", \"Alive\", outcome)) %>%   #we can recode as well with ifelse if we want to change only one or two categories\n  \n  mutate(hiv_status = case_when(hiv_status == \"NEG\" ~ \"Negative\",    #for more complex recoding better case_when\n                                hiv_status == \"POS\" ~ \"Positive\",\n                                TRUE                ~ \"Unknown/missing\")) %>% \n  \n  mutate(sexual_orientation = case_when(sexual_orientation == \"BISEXUAL\" ~ \"Bisexual\",\n                                        sexual_orientation == \"HETERO\" ~ \"Heterosexual\",\n                                        sexual_orientation == \"MSM\" ~ \"MSM/homo or bisexual male\",\n                                        TRUE                        ~  \"Unknown/missing\")) %>% \n  \n  mutate(age_group = age_categories(age, \n                                    lower = 0,      #set up the lower age\n                                    upper = 70,     #set up the upper age\n                                    by = 10))       #set up the age breaks\n\n\n\n\n# Check that all changes have been made correctly\n\nskim(mpox_linelist)\n\ntabyl(mpox_linelist, gender)\n\ntabyl(mpox_linelist, clinical_symptoms)\n\ntabyl(mpox_linelist, outcome)\n\ntabyl(mpox_linelist, hiv_status)\n\ntabyl(mpox_linelist, sexual_orientation)\n\ntabyl(mpox_linelist, week_date)\n\ntabyl(mpox_linelist, age_group)\n```\n:::\n\n\n</br>\n\n</details>\n\n::: {.callout-note appearance=\"minimal\" icon=\"false\"}\n\n**Test yourself!**\n\n::: webex-check\n\nHow many male cases we have in the data frame? <div class='webex-radiogroup' id='radio_VVPZDRTPYN'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_VVPZDRTPYN\" value=\"\"></input> <span>36</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_VVPZDRTPYN\" value=\"answer\"></input> <span>1960</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_VVPZDRTPYN\" value=\"\"></input> <span>65</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_VVPZDRTPYN\" value=\"\"></input> <span>1523</span></label></div>\n\n:::\n\n::: webex-check\n\nWhich week has the largest number of cases? <div class='webex-radiogroup' id='radio_MRVSZNIQEG'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_MRVSZNIQEG\" value=\"answer\"></input> <span>2022-04-11</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_MRVSZNIQEG\" value=\"\"></input> <span>2022-07-25</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_MRVSZNIQEG\" value=\"\"></input> <span>2022-02-28</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_MRVSZNIQEG\" value=\"\"></input> <span>2022-05-09</span></label></div>\n\n:::\n\n::: webex-check\n\nHow many cases with missing age are present? <div class='webex-radiogroup' id='radio_HMUSRAVPHD'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_HMUSRAVPHD\" value=\"\"></input> <span>1</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_HMUSRAVPHD\" value=\"answer\"></input> <span>3</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_HMUSRAVPHD\" value=\"\"></input> <span>None</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_HMUSRAVPHD\" value=\"\"></input> <span>396</span></label></div>\n\n:::\n\n::: \n\n### 4.2: Clean the aggregated data\n\nIn a similar way, clean the aggregated data by:\n\n-   Standardising names to lower case\n-   Ensure that date of reporting is of class \"Date\"\n-   Create a column called \"week_date\" with the week of reporting starting on Monday\n\n<details>\n\n<summary style=\"text-decoration: underline; color: red;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>`{=html}Click to see a solution (try\nit yourself first!)\n\n</summary>\n\n</br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check class of date of reporting column\n\nclass(mpox_agg_raw$DateRep) #It is a date, so we do not need to change its class\n\n# Create a new object called mpox_agg which is the clean version of the raw data, applying the cleaning functions\n\nmpox_agg <- mpox_agg_raw %>% \n  \n  clean_names() %>% # standardises names and puts all into lower case \n  \n  #(Note: after this point all column names have changed)\n  \n  mutate(week_date = floor_date(date_rep, # create week column with Monday start\n                              unit = \"week\",\n                              week_start = \"Monday\")) \n```\n:::\n\n\n</br>\n\n</details>\n\n## Step 5: Describe outbreak by person, place, and time\n\nYou’re now aware that you have information on region of residence, dates of notification, age, and sex of cases. You can use this to build a picture of how the outbreak is progressing in Europe.\n\n### 5.1: Describe geographic distribution of cases\n\n**Task**: Using the case-based data, create a table with the number of cases by country\n\n<details>\n\n<summary style=\"text-decoration: underline; color: darkgreen;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:gold;overflow:visible;position:relative;\"><path d=\"M297.2 248.9C311.6 228.3 320 203.2 320 176c0-70.7-57.3-128-128-128S64 105.3 64 176c0 27.2 8.4 52.3 22.8 72.9c3.7 5.3 8.1 11.3 12.8 17.7l0 0c12.9 17.7 28.3 38.9 39.8 59.8c10.4 19 15.7 38.8 18.3 57.5H109c-2.2-12-5.9-23.7-11.8-34.5c-9.9-18-22.2-34.9-34.5-51.8l0 0 0 0c-5.2-7.1-10.4-14.2-15.4-21.4C27.6 247.9 16 213.3 16 176C16 78.8 94.8 0 192 0s176 78.8 176 176c0 37.3-11.6 71.9-31.4 100.3c-5 7.2-10.2 14.3-15.4 21.4l0 0 0 0c-12.3 16.8-24.6 33.7-34.5 51.8c-5.9 10.8-9.6 22.5-11.8 34.5H226.4c2.6-18.7 7.9-38.6 18.3-57.5c11.5-20.9 26.9-42.1 39.8-59.8l0 0 0 0 0 0c4.7-6.4 9-12.4 12.7-17.7zM192 128c-26.5 0-48 21.5-48 48c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-44.2 35.8-80 80-80c8.8 0 16 7.2 16 16s-7.2 16-16 16zm0 384c-44.2 0-80-35.8-80-80V416H272v16c0 44.2-35.8 80-80 80z\"/></svg>`{=html} Click to read a hint\n\n</summary>\n\n</br>\n\nAn easy way to produce tables is using the function tbl_summary() from\n{gtsummary} package\n\n</br>\n\n</details>\n\n::: {.callout-note appearance=\"minimal\" icon=\"false\"}\n\n**Test yourself!**\n\n::: webex-check\n\nWhat's the country with the largest percentage of cases? <div class='webex-radiogroup' id='radio_DWTXVIAVJF'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DWTXVIAVJF\" value=\"\"></input> <span>C</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DWTXVIAVJF\" value=\"\"></input> <span>D</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DWTXVIAVJF\" value=\"\"></input> <span>B</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_DWTXVIAVJF\" value=\"answer\"></input> <span>A</span></label></div>\n\n:::\n:::\n\n<details>\n\n<summary style=\"text-decoration: underline; color: red;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>`{=html}Click to see a solution (try\nit yourself first!)\n\n</summary>\n\n</br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create an object with the table\ncb_country_table <- mpox_linelist %>%\n\n  select(country) %>% #select the column that we want to use in the table\n  \n  gtsummary::tbl_summary() # create the table\n\n# Ask R to print the table\ncb_country_table\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"juskhhmhhr\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#juskhhmhhr table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#juskhhmhhr thead, #juskhhmhhr tbody, #juskhhmhhr tfoot, #juskhhmhhr tr, #juskhhmhhr td, #juskhhmhhr th {\n  border-style: none;\n}\n\n#juskhhmhhr p {\n  margin: 0;\n  padding: 0;\n}\n\n#juskhhmhhr .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#juskhhmhhr .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#juskhhmhhr .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#juskhhmhhr .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#juskhhmhhr .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#juskhhmhhr .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#juskhhmhhr .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#juskhhmhhr .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#juskhhmhhr .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#juskhhmhhr .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#juskhhmhhr .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#juskhhmhhr .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#juskhhmhhr .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#juskhhmhhr .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#juskhhmhhr .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#juskhhmhhr .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#juskhhmhhr .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#juskhhmhhr .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#juskhhmhhr .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#juskhhmhhr .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#juskhhmhhr .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#juskhhmhhr .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#juskhhmhhr .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#juskhhmhhr .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#juskhhmhhr .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#juskhhmhhr .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#juskhhmhhr .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#juskhhmhhr .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#juskhhmhhr .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#juskhhmhhr .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#juskhhmhhr .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#juskhhmhhr .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#juskhhmhhr .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#juskhhmhhr .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#juskhhmhhr .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#juskhhmhhr .gt_left {\n  text-align: left;\n}\n\n#juskhhmhhr .gt_center {\n  text-align: center;\n}\n\n#juskhhmhhr .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#juskhhmhhr .gt_font_normal {\n  font-weight: normal;\n}\n\n#juskhhmhhr .gt_font_bold {\n  font-weight: bold;\n}\n\n#juskhhmhhr .gt_font_italic {\n  font-style: italic;\n}\n\n#juskhhmhhr .gt_super {\n  font-size: 65%;\n}\n\n#juskhhmhhr .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#juskhhmhhr .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#juskhhmhhr .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#juskhhmhhr .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#juskhhmhhr .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#juskhhmhhr .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#juskhhmhhr .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;N = 2,000&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>N = 2,000</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">country</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    CountryA</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">816 (41%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    CountryB</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">391 (20%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    CountryC</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">474 (24%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    CountryD</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">217 (11%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    CountryE</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">102 (5.1%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n\n\n</br>\n\n</details>\n\n### 5.2: Describe cases over time\n\n**Tasks**: \n\n- Using the case-based data, create an epicurve by week of notification\n- Using the case-based data, create an epicurve by week of notification in which the colour of the bins represents the number of cases by country\n- Using the case-based data, create a heat plot with the number of cases by country and week of notification.\n\n\n<details>\n\n<summary style=\"text-decoration: underline; color: darkgreen;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:gold;overflow:visible;position:relative;\"><path d=\"M297.2 248.9C311.6 228.3 320 203.2 320 176c0-70.7-57.3-128-128-128S64 105.3 64 176c0 27.2 8.4 52.3 22.8 72.9c3.7 5.3 8.1 11.3 12.8 17.7l0 0c12.9 17.7 28.3 38.9 39.8 59.8c10.4 19 15.7 38.8 18.3 57.5H109c-2.2-12-5.9-23.7-11.8-34.5c-9.9-18-22.2-34.9-34.5-51.8l0 0 0 0c-5.2-7.1-10.4-14.2-15.4-21.4C27.6 247.9 16 213.3 16 176C16 78.8 94.8 0 192 0s176 78.8 176 176c0 37.3-11.6 71.9-31.4 100.3c-5 7.2-10.2 14.3-15.4 21.4l0 0 0 0c-12.3 16.8-24.6 33.7-34.5 51.8c-5.9 10.8-9.6 22.5-11.8 34.5H226.4c2.6-18.7 7.9-38.6 18.3-57.5c11.5-20.9 26.9-42.1 39.8-59.8l0 0 0 0 0 0c4.7-6.4 9-12.4 12.7-17.7zM192 128c-26.5 0-48 21.5-48 48c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-44.2 35.8-80 80-80c8.8 0 16 7.2 16 16s-7.2 16-16 16zm0 384c-44.2 0-80-35.8-80-80V416H272v16c0 44.2-35.8 80-80 80z\"/></svg>`{=html} Click to read a hint\n\n</summary>\n\n</br>\n\nTo do the epicurve, you can use ggplot() and geom_histogram(), which will automatically aggregate your data. If you are unsure on how ggplot() works, read the EpiRhandbook chapter on [Epidemic\ncurves](https://epirhandbook.com/en/new_pages/epicurves.html).\n\nAn alternative approach is to first aggregate the number of cases by week of notification. You can do this using the functions group_by() and summarise() from {dplyr}. If you are unsure on how to do this, review the [Grouping data](https://epirhandbook.com/en/new_pages/grouping.html) chapter of the EpiRhandbook.\n\nOnce you have an object with aggregated cases by week of notification, create the epicurve using ggplot().\nIf want a dynamic colour inside the bins, you need to assign the fill to the column you want to use (country) and place it inside the aesthetics\n\nHeat plots can be useful to understand how the epidemic evolved in different countries. You will need to aggregate your data by country and week of notification. You can do this using the functions group_by() and summarise() from {dplyr}. If you are unsure on how to do this, review the Grouping data chapter of the EpiRhandbook. Then, use the geom geom_tile() to create a heat plot. If you’re unsure on how to do this, read the EpiRhanbook section on [Heat Plots](https://epirhandbook.com/en/new_pages/heatmaps.html)\n\n</details>\n\n<details>\n\n<summary style=\"text-decoration: underline; color: red;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>`{=html}Click to see a solution (try\nit yourself first!)\n\n</summary>\n\n</br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Epicurve by notification\n\nepicurve_epox <- ggplot(data = mpox_linelist,          #data to be used\n                        aes(x = week_date)) +    #with geom_histogram() you only need to assign the x axis\n  \n  geom_histogram(binwidth = 7,                   #binwidth 7 ensures that the width represents 7 days\n                 fill=\"darkgreen\",               #colour inside the bins\n                 color=\"white\",                  #outline colour of the bins\n                 alpha=0.8) +                    #transparency of the bins\n  \n  scale_x_date(breaks = \"2 weeks\") +             #set the x axis labels to two week intervals\n\n  \n  labs(title=\"Mpox cases reported in 2022\") +  #add a title\n  \n  theme_bw() +                                  #assign a predefined theme\n  \n  theme(axis.text = element_text(size=9),       #define the font size of the axis text\n        axis.title = element_blank(),           #remove the titles of the x and y axis \n        axis.text.x = element_text(angle=90))   #rotate the x axis text\n           \n  \nepicurve_epox\n```\n\n::: {.cell-output-display}\n![](r_practical_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Epicurve by notification and country \n\nepicurve_epox_country <- ggplot(data = mpox_linelist,  #data to be used\n                        aes(x = week_date,       \n                            fill = country)) +   #now the fill needs to be inside aes()  \n  \n  geom_histogram(binwidth = 7,                   #binwidth 7 ensures that the width represents 7 days\n                 color=\"white\",                  #outline colour of the bins\n                 alpha=0.8) +                    #transparency of the bins\n  \n  scale_fill_viridis_d() +                       #we change the predefined colours\n\n  scale_x_date(breaks = \"2 weeks\") +             #set the x axis labels to two week intervals\n\n  \n  labs(title=\"Mpox cases reported by country in 2022\") +  #add a title\n  \n  theme_bw() +                                  #assign a predefined theme\n  \n  theme(legend.position = \"bottom\",             #legend position to the bottom\n        axis.text = element_text(size=9),       #define the font size of the axis text\n        axis.title = element_blank(),           #remove the titles of the x and y axis \n        axis.text.x = element_text(angle=90),   #rotate the x axis text\n        legend.title = element_blank())         #remove title of legend\n           \n  \nepicurve_epox_country\n```\n\n::: {.cell-output-display}\n![](r_practical_files/figure-html/unnamed-chunk-17-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# Heatmap of cases by country over time\n\nhp_epox <- mpox_linelist %>% #we first group the data by country and week of notification\n  \n  group_by(country, week_date) %>% \n  \n  summarise(n_cases = n(), .groups = \"drop\") %>% \n\n  #now we can use the pipe to directly plot the resulting data from the grouping\n  \n  ggplot(aes(x = week_date,\n           y = country,           #we want the countries to be in the y axis\n           fill = n_cases)) +     #the colour of the tiles should depend on the number of cases\n  \n  geom_tile(colour = \"black\") +   #this is the outline colour of each tile\n  \n  scale_fill_gradient(            #here we define the colours we want to use in the gradient\n    low = \"lightgreen\",\n    high = \"red\") +\n  \n  scale_x_date(breaks = \"2 weeks\") +             #set the x axis labels to two week intervals\n  \n  labs(\n    title= \"Mpox cases by country and week of notification\",\n    fill = \"Number of cases\"                               \n  ) +\n  \n  theme_bw() +\n  \n  theme(legend.position = \"bottom\",             #legend position to the bottom\n        axis.text = element_text(size=9),       #define the font size of the axis\n        axis.title = element_blank(),           #remove the titles of the x and y \n        axis.text.x = element_text(angle=90))   #rotate the x axis text\n    \nhp_epox \n```\n\n::: {.cell-output-display}\n![](r_practical_files/figure-html/unnamed-chunk-17-3.png){width=672}\n:::\n:::\n\n\n</br>\n\n</details>\n\n### 5.3: Describe demographic characteristics\n\nNow that we have created some outputs by time and place, we should focus on the \"person\" element. The two most important demographic characteristics are usually age and gender. In the case we are seeing,\nwe may also want to explore the sexual orientation of cases.\n\n**Task**:\n\n-   Explore the number of cases by age group and gender.\n-   Create a table with number and percentages of cases by sexual orientation\n\n<details>\n\n<summary style=\"text-decoration: underline; color: darkgreen;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:gold;overflow:visible;position:relative;\"><path d=\"M297.2 248.9C311.6 228.3 320 203.2 320 176c0-70.7-57.3-128-128-128S64 105.3 64 176c0 27.2 8.4 52.3 22.8 72.9c3.7 5.3 8.1 11.3 12.8 17.7l0 0c12.9 17.7 28.3 38.9 39.8 59.8c10.4 19 15.7 38.8 18.3 57.5H109c-2.2-12-5.9-23.7-11.8-34.5c-9.9-18-22.2-34.9-34.5-51.8l0 0 0 0c-5.2-7.1-10.4-14.2-15.4-21.4C27.6 247.9 16 213.3 16 176C16 78.8 94.8 0 192 0s176 78.8 176 176c0 37.3-11.6 71.9-31.4 100.3c-5 7.2-10.2 14.3-15.4 21.4l0 0 0 0c-12.3 16.8-24.6 33.7-34.5 51.8c-5.9 10.8-9.6 22.5-11.8 34.5H226.4c2.6-18.7 7.9-38.6 18.3-57.5c11.5-20.9 26.9-42.1 39.8-59.8l0 0 0 0 0 0c4.7-6.4 9-12.4 12.7-17.7zM192 128c-26.5 0-48 21.5-48 48c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-44.2 35.8-80 80-80c8.8 0 16 7.2 16 16s-7.2 16-16 16zm0 384c-44.2 0-80-35.8-80-80V416H272v16c0 44.2-35.8 80-80 80z\"/></svg>`{=html} Click to read a hint\n\n</summary>\n\n</br>\n\nThe easiest way to explore both columns (age_group and gender) would be to use the tabyl() function from {janitor}. Then, to create the age\npyramid explore the function age_pyramid() from the {apyramid} package. You can find more about this function in the EpiRhandbook chapter [Demographic pyramids and Likert-scales](https://epirhandbook.com/en/new_pages/age_pyramid.html)\n\nTo create the table by sexual orientation, consider using the function tbl_summary() from {gtsummary}\n\n</br>\n\n</details>\n\n<details>\n\n<summary style=\"text-decoration: underline; color: red;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>`{=html}Click to see a solution (try\nit yourself first!)\n\n</summary>\n\n</br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Explore gender and age group columns\ntabyl(mpox_linelist, gender)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  gender    n percent\n  Female   36  0.0180\n    Male 1960  0.9800\n   Other    1  0.0005\n Unknown    3  0.0015\n```\n:::\n\n```{.r .cell-code}\ntabyl(mpox_linelist, age_group)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n age_group   n percent valid_percent\n       0-9   1  0.0005  0.0005007511\n     10-19  33  0.0165  0.0165247872\n     20-29 396  0.1980  0.1982974462\n     30-39 766  0.3830  0.3835753630\n     40-49 524  0.2620  0.2623935904\n     50-59 204  0.1020  0.1021532298\n     60-69  64  0.0320  0.0320480721\n       70+   9  0.0045  0.0045067601\n      <NA>   3  0.0015            NA\n```\n:::\n\n```{.r .cell-code}\n# Table with sexual orientation \n\ntab_sor <- mpox_linelist %>% \n  \n  select(sexual_orientation) %>% \n  \n  tbl_summary(label = list(sexual_orientation ~ \"Sexual Orientation\")) \n\ntab_sor\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"yctmccprsq\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#yctmccprsq table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#yctmccprsq thead, #yctmccprsq tbody, #yctmccprsq tfoot, #yctmccprsq tr, #yctmccprsq td, #yctmccprsq th {\n  border-style: none;\n}\n\n#yctmccprsq p {\n  margin: 0;\n  padding: 0;\n}\n\n#yctmccprsq .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#yctmccprsq .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#yctmccprsq .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#yctmccprsq .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#yctmccprsq .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yctmccprsq .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yctmccprsq .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#yctmccprsq .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#yctmccprsq .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#yctmccprsq .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#yctmccprsq .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#yctmccprsq .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#yctmccprsq .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#yctmccprsq .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#yctmccprsq .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#yctmccprsq .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#yctmccprsq .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#yctmccprsq .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#yctmccprsq .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yctmccprsq .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#yctmccprsq .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#yctmccprsq .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#yctmccprsq .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yctmccprsq .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#yctmccprsq .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#yctmccprsq .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yctmccprsq .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yctmccprsq .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#yctmccprsq .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yctmccprsq .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#yctmccprsq .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#yctmccprsq .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yctmccprsq .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yctmccprsq .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#yctmccprsq .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#yctmccprsq .gt_left {\n  text-align: left;\n}\n\n#yctmccprsq .gt_center {\n  text-align: center;\n}\n\n#yctmccprsq .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#yctmccprsq .gt_font_normal {\n  font-weight: normal;\n}\n\n#yctmccprsq .gt_font_bold {\n  font-weight: bold;\n}\n\n#yctmccprsq .gt_font_italic {\n  font-style: italic;\n}\n\n#yctmccprsq .gt_super {\n  font-size: 65%;\n}\n\n#yctmccprsq .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#yctmccprsq .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#yctmccprsq .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#yctmccprsq .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#yctmccprsq .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#yctmccprsq .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#yctmccprsq .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;N = 2,000&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>N = 2,000</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Sexual Orientation</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Bisexual</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">7 (0.4%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Heterosexual</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">46 (2.3%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    MSM/homo or bisexual male</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">833 (42%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Unknown/missing</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,114 (56%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n\n\n</br>\n\n</details>\n\n::: {.callout-note appearance=\"minimal\" icon=\"false\"}\n\n**Test yourself!**\n\n::: webex-check\n\nWhich demographic group is more affected by Mpox? <div class='webex-radiogroup' id='radio_FGXMRYHWDA'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_FGXMRYHWDA\" value=\"\"></input> <span>Females 60-69</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_FGXMRYHWDA\" value=\"\"></input> <span>Males 40-49</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_FGXMRYHWDA\" value=\"\"></input> <span>Females 10-19</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_FGXMRYHWDA\" value=\"answer\"></input> <span>Males 30-39</span></label></div>\n\n:::\n:::\n\n\n### 5.4: Describe clinical characteristics\n\nNow, let's summarise the main clinical information that we have in our case-based data frame.\n\n**Tasks**:\n\n-   Create a bar plot with the proportion of each type clinical symptoms\n\n-   Create a table with the number and percentage of cases by outcome\n\n\n<details>\n\n<summary style=\"text-decoration: underline; color: darkgreen;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:gold;overflow:visible;position:relative;\"><path d=\"M297.2 248.9C311.6 228.3 320 203.2 320 176c0-70.7-57.3-128-128-128S64 105.3 64 176c0 27.2 8.4 52.3 22.8 72.9c3.7 5.3 8.1 11.3 12.8 17.7l0 0c12.9 17.7 28.3 38.9 39.8 59.8c10.4 19 15.7 38.8 18.3 57.5H109c-2.2-12-5.9-23.7-11.8-34.5c-9.9-18-22.2-34.9-34.5-51.8l0 0 0 0c-5.2-7.1-10.4-14.2-15.4-21.4C27.6 247.9 16 213.3 16 176C16 78.8 94.8 0 192 0s176 78.8 176 176c0 37.3-11.6 71.9-31.4 100.3c-5 7.2-10.2 14.3-15.4 21.4l0 0 0 0c-12.3 16.8-24.6 33.7-34.5 51.8c-5.9 10.8-9.6 22.5-11.8 34.5H226.4c2.6-18.7 7.9-38.6 18.3-57.5c11.5-20.9 26.9-42.1 39.8-59.8l0 0 0 0 0 0c4.7-6.4 9-12.4 12.7-17.7zM192 128c-26.5 0-48 21.5-48 48c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-44.2 35.8-80 80-80c8.8 0 16 7.2 16 16s-7.2 16-16 16zm0 384c-44.2 0-80-35.8-80-80V416H272v16c0 44.2-35.8 80-80 80z\"/></svg>`{=html} Click to read a hint\n\n</summary>\n\n</br>\n\nTo create bar plots we can use geom_bar() or geom_col() depending on the nature of our data. If we aggregate first, we can use geom_col(), otherwise we should use geom_bar(). There is a function of the {gtsummary} package called add_p() which enables you to easy calculate a statistical test across groups. If you want to know more read the section on [gtsummary package](https://epirhandbook.com/en/new_pages/stat_tests.html#stats_gt) of the EpiRhandbook.\n\n</br>\n\n</details>\n<details>\n\n<summary style=\"text-decoration: underline; color: red;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>`{=html}Click to see a solution (try\nit yourself first!)\n\n</summary>\n\n</br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Bar plot with clinical symptoms\n\nbar_clinical <- mpox_linelist %>% \n  \n  drop_na(clinical_symptoms) %>%   # we remove those with missing clinical symptoms\n  \n  group_by(clinical_symptoms) %>% \n  \n  summarise(n_cases = n(), .groups = \"drop\") %>%\n  \n  mutate(prop=(n_cases/sum(n_cases))*100) %>%  # we create a column with proportions\n  \n  ggplot(aes(y = reorder(clinical_symptoms, prop), x = prop)) +  # the reorder function ensures that categories are ordered by proportion in the graph\n  \n  geom_col(fill = \"darkgreen\") + \n  \n  labs(\n    title= \"Frequency of clinical symptoms in Mpox cases\",\n    y = \"\",\n    x = \"Number of cases\"\n  ) +\n  \n  theme_bw() +\n  \n  theme(axis.text = element_text(size=9))       #define the font size of the axis\n\nbar_clinical  \n```\n\n::: {.cell-output-display}\n![](r_practical_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Table with number and percentage of cases by outcome\n\ntab_outcome <- mpox_linelist %>% \n  \n  select(outcome) %>% \n  \n  tbl_summary(label = list(outcome = \"Reported outcome\")) # with the argument \"label\" we can change how the column name is displayed\n\ntab_outcome\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"zuncjklfsb\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#zuncjklfsb table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#zuncjklfsb thead, #zuncjklfsb tbody, #zuncjklfsb tfoot, #zuncjklfsb tr, #zuncjklfsb td, #zuncjklfsb th {\n  border-style: none;\n}\n\n#zuncjklfsb p {\n  margin: 0;\n  padding: 0;\n}\n\n#zuncjklfsb .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#zuncjklfsb .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#zuncjklfsb .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#zuncjklfsb .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#zuncjklfsb .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zuncjklfsb .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zuncjklfsb .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#zuncjklfsb .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#zuncjklfsb .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#zuncjklfsb .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#zuncjklfsb .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#zuncjklfsb .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#zuncjklfsb .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#zuncjklfsb .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#zuncjklfsb .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#zuncjklfsb .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#zuncjklfsb .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#zuncjklfsb .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#zuncjklfsb .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zuncjklfsb .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#zuncjklfsb .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#zuncjklfsb .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#zuncjklfsb .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zuncjklfsb .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#zuncjklfsb .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#zuncjklfsb .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zuncjklfsb .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zuncjklfsb .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#zuncjklfsb .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zuncjklfsb .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#zuncjklfsb .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#zuncjklfsb .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zuncjklfsb .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zuncjklfsb .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#zuncjklfsb .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#zuncjklfsb .gt_left {\n  text-align: left;\n}\n\n#zuncjklfsb .gt_center {\n  text-align: center;\n}\n\n#zuncjklfsb .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#zuncjklfsb .gt_font_normal {\n  font-weight: normal;\n}\n\n#zuncjklfsb .gt_font_bold {\n  font-weight: bold;\n}\n\n#zuncjklfsb .gt_font_italic {\n  font-style: italic;\n}\n\n#zuncjklfsb .gt_super {\n  font-size: 65%;\n}\n\n#zuncjklfsb .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#zuncjklfsb .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#zuncjklfsb .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#zuncjklfsb .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#zuncjklfsb .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#zuncjklfsb .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#zuncjklfsb .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;Characteristic&lt;/strong&gt;\"><strong>Characteristic</strong></th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"&lt;strong&gt;N = 2,000&lt;/strong&gt;&lt;span class=&quot;gt_footnote_marks&quot; style=&quot;white-space:nowrap;font-style:italic;font-weight:normal;&quot;&gt;&lt;sup&gt;1&lt;/sup&gt;&lt;/span&gt;\"><strong>N = 2,000</strong><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span></th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">Reported outcome</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\"><br /></td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Alive</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">1,405 (70%)</td></tr>\n    <tr><td headers=\"label\" class=\"gt_row gt_left\">    Unknown</td>\n<td headers=\"stat_0\" class=\"gt_row gt_center\">595 (30%)</td></tr>\n  </tbody>\n  \n  <tfoot class=\"gt_footnotes\">\n    <tr>\n      <td class=\"gt_footnote\" colspan=\"2\"><span class=\"gt_footnote_marks\" style=\"white-space:nowrap;font-style:italic;font-weight:normal;\"><sup>1</sup></span> n (%)</td>\n    </tr>\n  </tfoot>\n</table>\n</div>\n```\n:::\n:::\n\n\n</br>\n\n</details>\n\n## **Step 6: Reviewing data quality**\n\nIt is important to understand how timely, complete, and valid your data is, if it will be the basis of understanding an outbreak and making decisions. For example - you will need to be mindful of reporting delays when interpreting epicurves, and be aware of how complete different sources of data are compared to each other. \n\n### 6.1: Delay between date of onset, diagnosis and notification\n\n**Tasks**\n\n-   Calculate median time from symptom onset to diagnosis and from diagnosis to notification, both overall and by country\n\n-   Assess visually the number of cases by calendar period and type of date (onset, diagnosis and notification)\n\n<details>\n\n<summary style=\"text-decoration: underline; color: darkgreen;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 384 512\" style=\"height:1em;width:0.75em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:gold;overflow:visible;position:relative;\"><path d=\"M297.2 248.9C311.6 228.3 320 203.2 320 176c0-70.7-57.3-128-128-128S64 105.3 64 176c0 27.2 8.4 52.3 22.8 72.9c3.7 5.3 8.1 11.3 12.8 17.7l0 0c12.9 17.7 28.3 38.9 39.8 59.8c10.4 19 15.7 38.8 18.3 57.5H109c-2.2-12-5.9-23.7-11.8-34.5c-9.9-18-22.2-34.9-34.5-51.8l0 0 0 0c-5.2-7.1-10.4-14.2-15.4-21.4C27.6 247.9 16 213.3 16 176C16 78.8 94.8 0 192 0s176 78.8 176 176c0 37.3-11.6 71.9-31.4 100.3c-5 7.2-10.2 14.3-15.4 21.4l0 0 0 0c-12.3 16.8-24.6 33.7-34.5 51.8c-5.9 10.8-9.6 22.5-11.8 34.5H226.4c2.6-18.7 7.9-38.6 18.3-57.5c11.5-20.9 26.9-42.1 39.8-59.8l0 0 0 0 0 0c4.7-6.4 9-12.4 12.7-17.7zM192 128c-26.5 0-48 21.5-48 48c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-44.2 35.8-80 80-80c8.8 0 16 7.2 16 16s-7.2 16-16 16zm0 384c-44.2 0-80-35.8-80-80V416H272v16c0 44.2-35.8 80-80 80z\"/></svg>`{=html} Click to read a hint\n\n</summary>\n\n</br>\n\nTo plot together the different dates you may need to transform your data from \"wide\" to \"long\" form. What we call \"pivoting\" in R. The objective is to have a column with the different date categories (onset, diagnosis and notification) and another column with their date value. If you are unsure on how to do this, have a look at the [Pivoting data](https://epirhandbook.com/en/new_pages/pivoting.html) chapter of the EpiRhandbook. Then, try to plot with the daily values, but if that's not easy to interpret you may want to aggregate cases by week.\n\n</br>\n\n</details>\n\n::: {.callout-note appearance=\"minimal\" icon=\"false\"}\n\n**Test yourself!**\n\n::: webex-check\n\nIs there a difference in the delay from diagnosis to notification by country? <div class='webex-radiogroup' id='radio_RIIAMXVEYQ'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_RIIAMXVEYQ\" value=\"\"></input> <span>Yes</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_RIIAMXVEYQ\" value=\"answer\"></input> <span>No</span></label></div>\n\n:::\n:::\n\n<details>\n\n<summary style=\"text-decoration: underline; color: red;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>`{=html}Click to see a solution (try\nit yourself first!)\n\n</summary>\n\n</br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Estimate delay between onset and diagnosis, and between diagnosis and notification\n\ndelay_db <- mpox_linelist %>% \n  \n  mutate(delay_diag = as.numeric(date_of_diagnosis - date_of_onset)) %>%   #we create variables with difference between dates, we transform them in numeric to be able to then calculate measures of central tendency\n  \n  mutate(delay_not = as.numeric(date_of_notification - date_of_diagnosis))\n\nsummary(delay_db$delay_diag) #the summary will give us measures of central tendency and dispersion\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n -2.000   4.000   7.000   7.758  10.000  66.000     897 \n```\n:::\n\n```{.r .cell-code}\nsummary(delay_db$delay_not)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max.     NA's \n-46.0000  -2.0000   0.0000  -0.6078   1.0000  23.0000      715 \n```\n:::\n\n```{.r .cell-code}\ndelay_country <- delay_db %>% #here, we group by country and summarise the median to compare across countries\n  \n  group_by(country) %>% \n  \n  summarise(median_delay_diag = median(delay_diag, na.rm = T),\n            median_delay_not = median(delay_not, na.rm = T))\n\ndelay_country\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 3\n  country  median_delay_diag median_delay_not\n  <chr>                <dbl>            <dbl>\n1 CountryA                 7                0\n2 CountryB                 7                0\n3 CountryC                 6                0\n4 CountryD                 7                0\n5 CountryE                 6                0\n```\n:::\n\n```{.r .cell-code}\n# Line graph with the different dates \n\ndates_longer <- mpox_linelist %>% # use the variables of the dates and make a longer dataset. In the pivot_longer() command we select the columns which we want to expand in long format and transform the dataset\n   \n  pivot_longer(\n    \n    cols=starts_with(\"date_\"),         # all columns starting with \"date_\" will be taken \n\n    names_to = \"indicator\",            #the names of the columns will be placed in a single column called \"indicator\"\n\n    values_to = \"date\")                # the values (which are dates in this case) will be placed in a column called \"date\"\n  \n\ndates_longer_week <- dates_longer  %>% \n\n  mutate(week_date = floor_date(date, unit = \"week\", week_start = \"Monday\")) %>%  # we create a week column\n    \n  group_by(indicator, week_date) %>% \n    \n  summarise(n=n(), .groups=\"drop\") %>%   # we group and summarise to have the number of cases by date type and week\n    \n  drop_na(week_date)                     # we drop the cases with no data on dates\n\n\n\n\nplot_date_delay <-   ggplot(data = dates_longer_week,\n                            aes(x = week_date, \n                                y = n, \n                                color=indicator)) +\n  \n  geom_line(linewidth = 1.5) +\n  \n  scale_x_date(breaks = \"2 weeks\")+\n  \n  theme_bw() +\n  \n  theme(legend.position = \"bottom\", \n        axis.text = element_text(size=9),\n        axis.title = element_blank(),\n        axis.text.x = element_text(angle=90),\n        legend.title = element_blank()) +\n  labs(title=\"Mpox cases reported in 2022, by date of onset, diagnosis and notification.\")\n\nplot_date_delay\n```\n\n::: {.cell-output-display}\n![](r_practical_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\n</br>\n\n</details>\n\n### 6.2: Compare case-based and aggregated data\n\n**Task**: Create a plot comparing the number of cases reported to through the case-based flow and through the aggregated flow in each\ncountry.\n\nNOTE: Take into consideration that the column on cases in the aggregated\ndata frame reports the *cumulative* number of cases.\n\n::: {.callout-note appearance=\"minimal\" icon=\"false\"}\n\n**Test yourself!**\n\n::: webex-check\n\nWhich country is not reporting aggregated data? <div class='webex-radiogroup' id='radio_USUOTBEAST'><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_USUOTBEAST\" value=\"\"></input> <span>A</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_USUOTBEAST\" value=\"\"></input> <span>B</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_USUOTBEAST\" value=\"answer\"></input> <span>C</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_USUOTBEAST\" value=\"\"></input> <span>D</span></label><label><input type=\"radio\" autocomplete=\"off\" name=\"radio_USUOTBEAST\" value=\"\"></input> <span>E</span></label></div>\n\n:::\n:::\n\n<details>\n\n<summary style=\"text-decoration: underline; color: red;\">\n\n`<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 448 512\" style=\"height:1em;width:0.88em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:red;overflow:visible;position:relative;\"><path d=\"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z\"/></svg>`{=html}Click to see a solution (try\nit yourself first!)\n\n</summary>\n\n</br>\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a data frame with the overall number of cases reported through the aggregated flux\n\nmpox_agg_country <- mpox_agg %>% \n  \n  group_by(country) %>% \n  \n  filter(date_rep == max(date_rep)) %>% # as we have cumulative data, we keep only the last week (after grouping by country)\n  \n  select(-date_rep, -week_date) %>%     # remove unnecessary columns\n\n  mutate(source = \"aggregated\")         # we create this column to distinguish the numbers from the case-based flux\n\n\n# Create a data frame with the overall number of cases reported through the case-based flux\n\nmpox_linelist_country <- mpox_linelist %>%\n  \n  group_by(country) %>% \n  \n  summarise(cases = n(), .groups = \"drop\") %>% \n  \n  mutate(source = \"case_based\")       # we create this column to distinguish the numbers from the\n  \n\n# We append both data frames. Remember this is different from merging\n\ntotal_data <- bind_rows(mpox_linelist_country, mpox_agg_country)\n\n\n# We create a graph to compare the cases reported in both sources\n\ngraph_comp <- ggplot(data = total_data,\n                     aes(x = source, \n                         y = cases, \n                         fill = source)) +\n  \n  geom_col(position = \"dodge\") +            #position dodge puts bars one next to each other, instead of \"stacked\"\n  \n  facet_wrap(~ country, scales = \"free_y\") +  # this command gives us one graph per country. The argument scales is used to allow each y axis scales to adjust to the data\n\n  scale_fill_viridis_d(\n    labels = c(\"Aggregated\", \"Case-based\")  # this function changes the colours, but with the argument \"labels\" we can change the text of each fill.\n     ) +\n  \n  \n  labs(\n    title = \"Number of cases of Mpox reported in 2022 according to source of data\",\n    fill = \"Source\",\n    x = \"\",\n    y = \"Total number of cases\"\n  ) + \n  \n  theme_bw() +\n  \n  theme(axis.text.x = element_blank(),      # we remove the text of the x axis because it is already present in the legend\n        axis.ticks.x = element_blank())     # we also remove the ticks for aesthetic purposes\n\ngraph_comp\n```\n\n::: {.cell-output-display}\n![](r_practical_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n</br>\n\n</details>\n\n## Final thoughts\n\nWell done! Through your analysis you now understand the magnitude of the outbreak so far, where and when it spread, which demographic groups are most affected, and how the disease actually manifests in terms of symptoms and severity. ECDC is very happy with your work. \n\nBy coding this up in R, this analysis should be reproducible, meaning you can quickly update it with new data and keep monitoring the outbreak. To further practise reproducible reports, [link to RMarkdown]. \n\n## Case study information \n\n**Authorship**\n\nOriginal authors: Xanthi Andrianou, Gianfranco Spiteri (ECDC EI Group)\\\nData source: Fictional data provided by ECDC EI Group for training\npurposes\\\n\n| Date         | Changes made       | Version          | Author          |\n|--------------|:-------------------|-----------------:|------------------|\n| October 2021 |First draft         |     1            |  Xanthi Andrianou |\n| June 2024    | Adapted to case study template  | 1.1 | Alberto Mateo Urdiales |\n\n\n**Terms of Use**\n\n<!-- Describe the licencing and other appropriate information about Terms of use or any other disclaimer -->\n",
    "supporting": [
      "r_practical_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}